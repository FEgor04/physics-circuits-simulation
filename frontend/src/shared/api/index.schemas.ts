/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * Physics circuits simulation Engine
 * Sample API of the Physics project engine
 * OpenAPI spec version: 1.0.0
 */
export type GetUsersPermissionsResponsePermission =
  (typeof GetUsersPermissionsResponsePermission)[keyof typeof GetUsersPermissionsResponsePermission];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetUsersPermissionsResponsePermission = {
  EDIT: "EDIT",
  VIEW: "VIEW",
} as const;

/**
 * Response for getting users permissions details
 */
export interface GetUsersPermissionsResponse {
  permission: GetUsersPermissionsResponsePermission;
  username: string;
}

/**
 * Response for getting user details
 */
export interface GetUserResponse {
  /** User email */
  readonly email: string;
  /** User ID */
  readonly id: number;
  /** User name */
  readonly name: string;
}

export interface SignInRequest {
  email: string;
  password: string;
}

export interface SignUpAdminRequest {
  adminKey: string;
  email: string;
  name: string;
  password: string;
}

/**
 * Error message model
 */
export interface ErrorMessage {
  description?: string;
  message?: string;
  statusCode?: number;
  timestamp?: string;
}

/**
 * JWT Response
 */
export interface JwtResponse {
  /** Access token */
  accessToken: string;
  /** User ID */
  id: number;
  /** User name */
  name: string;
  /** Refresh token */
  refreshToken: string;
  /** Username */
  username: string;
}

export interface SignUpRequest {
  email: string;
  name: string;
  password: string;
}

/**
 * Response for getting scheme details
 */
export interface SchemeResponse {
  /** Scheme author name */
  readonly authorName: string;
  /** User permission */
  readonly canEdit: boolean;
  readonly components?: ElectricalComponentDto[];
  /** Scheme id */
  readonly id: number;
  /** Scheme id */
  readonly name: string;
}

/**
 * Request to create a schema
 */
export interface SchemeCreateRequest {
  /** Scheme name */
  name: string;
}

export type SetPermissionsRequestPermission =
  (typeof SetPermissionsRequestPermission)[keyof typeof SetPermissionsRequestPermission];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SetPermissionsRequestPermission = {
  EDIT: "EDIT",
  VIEW: "VIEW",
} as const;

/**
 * Request to set permissions for users
 */
export interface SetPermissionsRequest {
  permission: SetPermissionsRequestPermission;
  username: string;
}

/**
 * Request to update scheme
 */
export interface SchemeUpdateRequest {
  electricalComponentDto?: ElectricalComponentDto[];
  /** Scheme new name */
  schemeName: string;
}

/**
 * Point dto
 */
export interface PointDto {
  /** Point x coordinate */
  x: number;
  /** Point y coordinate */
  y: number;
}

/**
 * Type of component
 */
export type ElectricalComponentDtoType = (typeof ElectricalComponentDtoType)[keyof typeof ElectricalComponentDtoType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ElectricalComponentDtoType = {
  WIRE: "WIRE",
  RESISTOR: "RESISTOR",
  SOURCE: "SOURCE",
  SOURCE_DC: "SOURCE_DC",
  VOLTMETER: "VOLTMETER",
  AMPERMETER: "AMPERMETER",
} as const;

/**
 * DTO for Electrical component
 */
export interface ElectricalComponentDto {
  a: PointDto;
  b: PointDto;
  /** Component id  */
  componentId: number;
  /** EMF of the component */
  emf?: number;
  /** Component resistance */
  resistance?: number;
  /** Type of component */
  type: ElectricalComponentDtoType;
}
